// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisifoNotes.Lib.DA.EFCore;

namespace SisifoNotes.Web.Migrations
{
    [DbContext(typeof(SisifoNotesContext))]
    partial class SisifoNotesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SisifoNotes.Lib.Core.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("FirstSurname");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("SecondSurname");

                    b.Property<string>("Token");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("ListId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Note", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Notes");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Note");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Client", b =>
                {
                    b.HasBaseType("SisifoNotes.Lib.Core.User");

                    b.HasDiscriminator().HasValue("Client");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Event", b =>
                {
                    b.HasBaseType("SisifoNotes.Lib.Models.Note");

                    b.Property<DateTime>("DateFinish");

                    b.Property<DateTime>("DateInit");

                    b.Property<string>("Description");

                    b.Property<string>("Place");

                    b.HasDiscriminator().HasValue("Event");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.List", b =>
                {
                    b.HasBaseType("SisifoNotes.Lib.Models.Note");

                    b.HasDiscriminator().HasValue("List");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Task", b =>
                {
                    b.HasBaseType("SisifoNotes.Lib.Models.Note");

                    b.Property<DateTime>("Deadline");

                    b.Property<int>("Priority");

                    b.HasDiscriminator().HasValue("Task");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Text", b =>
                {
                    b.HasBaseType("SisifoNotes.Lib.Models.Note");

                    b.Property<string>("Body");

                    b.HasDiscriminator().HasValue("Text");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Item", b =>
                {
                    b.HasOne("SisifoNotes.Lib.Models.List")
                        .WithMany("Items")
                        .HasForeignKey("ListId");
                });

            modelBuilder.Entity("SisifoNotes.Lib.Models.Note", b =>
                {
                    b.HasOne("SisifoNotes.Lib.Models.Client")
                        .WithMany("Notes")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
